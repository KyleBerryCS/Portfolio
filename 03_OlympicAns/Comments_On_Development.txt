CS 421 Final Project
Kyle Berry and Faisal Najar

Comments on developing process:

Finding the correct commands would prove to be the bulk of the work spent on the program, as we understood what we needed to do but were 
unsure how to get the library to do it.  For the first part of the program we initially created a bulk parser, using that as a stepping stone 
to figure out how to get a regular parser to work in NLTK.  The regular parser, once created, did not use the bulk parser at all.  This process
repeated itself in part two, where we ended up creating our own grammar for a new semantic parser that did not use any of the regular parsing 
code. There is surely a way to use a regular parser with the semantic parsing functions, but I don’t know what they are.  The primary issue 
is that the NLTK function descriptions usually lack examples, which can make it difficult what certain parameters are actually referring too.  Part one in particular suffered from most forums/help sites/etc dealt with finding specific sorts of data rather than general parsing.  The online book the TA showed us helped significantly, although a comprehensive list of what functions are available (with examples!) would have made this project a lot easier.

The actual coding was easy, save for some difficulties with the SQL queries and the time spent creating the grammar.  
Learning how the queries are called in python took some time, but we eventually found some examples of how to call the functions.  
Even then it took some trial and error to learn what we could and could not give as commands, and our initial plan of using if statements 
based on returned semantic parsings would have taken a long time to figure out.  The online book was again a big help here, giving an example 
of a very small toy problem that had a semantic parse tree return parts of a query.  This also helped us understand semantic parse trees, and 
how they work, on a more general level.  The book also came with a small example grammar file that showed how formatting said files work.  We 
completely re-wrote the grammar for our project, however, and did not have “SELECT *” and such be generated by the grammar like the book’s 
example did.

Only one word gave us significant trouble in the grammar: Netherlands.  We both forgot that the Netherlands people are Dutch, 
so we initially created a grammar that could handle the (noun) ‘Netherlands’ in addition to the other (JJ) nationalities.

Overall, we still feel choosing NLTK was the right decision – it seemed like the java users had to deal with a much larger program 
in exchange for clearer instructions. We could be wrong, however, having not seen the java code ourselves.


EXAMPLE OUTPUTS:

Did Mulder win gold in slalom?
Query: Did Mulder win gold in slalom?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE  winner="mulder" AND  medal="gold" AND  competitions.name="slalom"
No

Did Vogt arrive first in skijumping?
Query: Did Vogt arrive first in skijumping?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE  winner="vogt" AND  medal="gold" AND  competitions.name="skijumping"
Yes

-----

Did a Chinese woman arrive first in super-combined?
Query: Did a Chinese woman arrive first in super-combined?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE   nationality="china" AND gender="F" AND  medal="gold" AND  competitions.name="super-combined"
No

Did a Norwegian man win gold in giantslalom?
Query: Did a Norwegian man win gold in giantslalom?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE   nationality="norway" AND gender="M" AND  medal="gold" AND  competitions.name="giantslalom"
No

-----

Who won gold in biathlon?
Query: Who won gold in biathlon?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE   medal="gold" AND  competitions.name="biathlon"
bjoerndalen
kuzmina

Who arrived second in crosscountry?
Query: Who arrived second in crosscountry?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE   medal="silver" AND  competitions.name="crosscountry"
johaug

EXTRA CREDIT:

Who arrived second in the nh skijumping?
Query: Who arrived second in the nh skijumping?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE   medal="silver" AND   type="nh" AND competitions.name="skijumping"
Prevc

Who won gold in the 7500m biathlon?
Query: Who won gold in the 7500m biathlon?
SELECT * FROM results INNER JOIN competitions ON results.comp_id = competitions.comp_id INNER JOIN athletes ON results.winner = athletes.name WHERE   medal="gold" AND   type="7500" AND competitions.name="biathlon"
kuzmina
